type Query {
  getCommentByPost_idAndUsername(post_id: ID!, username: String!): [Comment]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "comment" where "post_id" = $1 and "username" = $2
      """
      configuration: "postgresql"
    )

  getCommentByPostId(post_id: ID!): [Comment]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "comment" where "post_id" = $1
      """
      configuration: "postgresql"
    )

  getPostList: [Post]
    @dbquery(type: "postgresql", table: "post", configuration: "postgresql")

  getPostListByTopic(topic: String!): [Post]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      select *, "post".id as id from "post"
      join "subreddit" on "subreddit"."id" = "post"."subreddit_id"
      where "subreddit"."topic" = $1
      order by "post"."created_at" desc
      """
    )

  getSubredditList: [Subreddit]
    @dbquery(
      type: "postgresql"
      table: "subreddit"
      configuration: "postgresql"
    )

  getSubredditListById(id: ID!): [Subreddit]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "subreddit" where "id" = $1
      """
      configuration: "postgresql"
    )

  getSubredditListByTopic(topic: String!): [Subreddit]
    @dbquery(
      type: "postgresql"
      query: """
      select * from subreddit where "topic" = $1
      """
      configuration: "postgresql"
    )

  getVoteList: [Vote]
    @dbquery(type: "postgresql", table: "vote", configuration: "postgresql")

  getVotesByPostId(post_id: ID!): [Vote]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      select * from "vote" where "post_id" = $1
      order by "created_at" desc
      """
    )

  getAllPosts: [Post]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      SELECT * FROM post ORDER BY created_at DESC
      """
    )

  getAllComments: [Comment]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      SELECT * FROM comment ORDER BY created_at DESC
      """
    )

  getAllSubreddits: [Subreddit]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      SELECT * FROM subreddit
      """
    )

  getAllVotes: [Vote]
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      SELECT * FROM vote
      """
    )
}

type Mutation {
  addPost(
    title: String!
    body: String!
    image: String
    username: String!
    subreddit_id: ID!
  ): Post
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      INSERT INTO post (title, body, image, username, subreddit_id)
      VALUES ($1, $2, $3, $4, $5)
      RETURNING *
      """
    )

  addComment(post_id: ID!, text: String!, username: String!): Comment
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      INSERT INTO comment (post_id, text, username)
      VALUES ($1, $2, $3)
      RETURNING *
      """
    )

  addSubreddit(topic: String!): Subreddit
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      INSERT INTO subreddit (topic)
      VALUES ($1)
      RETURNING *
      """
    )

  addVote(post_id: ID!, upvote: Boolean!, username: String!): Vote
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      INSERT INTO vote (post_id, upvote, username)
      VALUES ($1, $2, $3)
      RETURNING *
      """
    )

  deletePost(id: ID!): Post
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      DELETE FROM post
      WHERE id = $1
      RETURNING *
      """
    )

  deleteComment(id: ID!): Comment
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      DELETE FROM comment
      WHERE id = $1
      RETURNING *
      """
    )

  deleteSubreddit(id: ID!): Subreddit
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      DELETE FROM subreddit
      WHERE id = $1
      RETURNING *
      """
    )

  deleteVote(id: ID!): Vote
    @dbquery(
      type: "postgresql"
      configuration: "postgresql"
      query: """
      DELETE FROM vote
      WHERE id = $1
      RETURNING *
      """
    )
}

type Comment {
  id: ID!
  created_at: DateTime
  post_id: ID
  text: String
  username: String
}

type Post {
  id: ID!
  created_at: DateTime
  title: String
  body: String
  image: String
  username: String
  subreddit_id: ID
  comments: [Comment]
    @materializer(
      query: "getCommentByPostId"
      arguments: [{ name: "post_id", field: "id" }]
    )
  votes: [Vote]
    @materializer(
      query: "getVotesByPostId"
      arguments: [{ name: "post_id", field: "id" }]
    )
  subreddit: [Subreddit]
    @materializer(
      query: "getSubredditListById"
      arguments: [{ name: "id", field: "subreddit_id" }]
    )
}

type Subreddit {
  id: ID!
  created_at: DateTime
  topic: String
}

type Vote {
  id: ID!
  created_at: DateTime
  post_id: ID
  upvote: Boolean
  username: String
}
